- name: Prepare system
  hosts: rpi

  tasks:
    - name: Remove Packages
      become: true
      ansible.builtin.apt:
        update_cache: true
        name: "{{ item }}"
        state: absent
      with_items:
        - libreoffice-base-core
        - libreoffice-calc
        - libreoffice-common
        - libreoffice-core
        - libreoffice-draw
        - libreoffice-gnome
        - libreoffice-gtk3
        - libreoffice-impress
        - libreoffice-math
        - libreoffice-style-colibre
        - libreoffice-style-elementary
        - libreoffice-style-yaru
        - libreoffice-uiconfig-calc
        - libreoffice-uiconfig-common
        - libreoffice-uiconfig-draw
        - libreoffice-uiconfig-impress
        - libreoffice-uiconfig-math
        - libreoffice-uiconfig-writer
        - libreoffice-writer
        - thunderbird
        - rhythmbox
        - shotwell
        - firefox
        - xfburn

    - name: Check whether wine exists
      ansible.builtin.stat:
        path: /usr/local/bin/wine
      register: wine_path

    - name: Install Required Software
      become: true
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items:
        - chromium-browser
        - xscreensaver

    - name: Install Required Packages
      become: true
      when: 'not wine_path.stat.exists'
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - flex
        - bison
        - libx11-dev
        - clang
        - libgnutls28-dev
        - libopengl-dev
        - libcups2-dev
        - libsdl2-dev
        - libudev-dev
        - libusb-1.0-0-dev
        - libosmesa6-dev
        - libxcomposite-dev
        - libpcap-dev
        - libsane-dev
        - libv4l-dev
        - libgstreamer1.0-dev
        - libvulkan-dev
        - libkrb5-dev
        - libfontconfig-dev
        - libffms2-dev
        - samba-dev
        - opencl-headers
        - ocl-icd-opencl-dev
        - oss4-dev
        - gettext
        - lld

    - name: Add Dezel User
      become: true
      ansible.builtin.user:
        name: dezel
        shell: /bin/bash
        create_home: true
        groups: sudo
        append: true
        password: "$y$j9T$aQmD3m1Y99kWcQ4slkBYj.$amw1mJl9EhVNb5ziaTI5ue4KcSVjgjZyEYNWgIgYMVC"

    - name: Add User
      become: true
      ansible.builtin.user:
        name: user
        shell: /bin/bash
        create_home: true
        password: $y$j9T$.yQrBSYQVFJo.mR8Kvfl/1$enLArSW4pASiI2tg0LFg1sKh7QZVibrGzGWd2.xCtGB

    - name: Clone Wine gitlab repo
      when: 'not wine_path.stat.exists'
      ansible.builtin.git:
        repo: https://gitlab.winehq.org/wine/wine.git
        dest: /home/ansible/src/wine
        version: wine-10.1
        clone: true
        update: true

    - name: Configure Wine
      when: 'not wine_path.stat.exists'
      ansible.builtin.shell:
        cmd: |
          cd /home/ansible/src/wine
          ./configure --host=aarch64-linux-gnu host_alias=aarch64-linux-gnu --enable-win64
      register: result
      changed_when: result.rc == 0

    - name: Debug Configure
      when: 'not wine_path.stat.exists'
      ansible.builtin.debug:
        var: result.stderr

    - name: Make Wine
      when: 'not wine_path.stat.exists'
      community.general.make:
        chdir: /home/ansible/src/wine

    - name: Install Wine
      when: 'not wine_path.stat.exists'
      community.general.make:
        target: install
        chdir: /home/ansible/src/wine
      become: true

    - name: Create Applications Directory
      ansible.builtin.file:
        path: '{{ item }}'
        state: directory
        mode: '0755'
      become: true
      loop:
        - /etc/skel/Desktop
        - /etc/skel/.config
        - /etc/skel/.config/autostart
        - /opt/LabelReprintingCore


    - name: Remove Dev Dependencies
      ansible.builtin.apt:
        name: '{{ item }}'
        state: absent
      become: true
      with_items:
        - flex
        - bison
        - libx11-dev
        - clang
        - libgnutls28-dev
        - libopengl-dev
        - libcups2-dev
        - libsdl2-dev
        - libudev-dev
        - libusb-1.0-0-dev
        - libosmesa6-dev
        - libxcomposite-dev
        - libpcap-dev
        - libsane-dev
        - libv4l-dev
        - libgstreamer1.0-dev
        - libvulkan-dev
        - libkrb5-dev
        - libfontconfig-dev
        - libffms2-dev
        - samba-dev
        - opencl-headers
        - ocl-icd-opencl-dev
        - oss4-dev
        - gettext
        - lld

    - name: Copy Files
      ansible.builtin.copy:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        owner: '{{ item.owner }}'
        group: '{{ item.group }}'
        mode: '0744'
      become: true
      loop:
        - { src: './LabelReprintingCore_arm64.zip', dest: '/tmp/LabelReprintingCore_arm64.zip', owner: ansible, group: ansible }
        - { src: './LabelReprintingCore.desktop', dest: '/etc/skel/Desktop/LabelReprintingCore.desktop', owner: root, group: root }
        - { src: './allowlaunch.desktop', dest: '/etc/skel/.config/autostart/allowlaunch.desktop', owner: root, group: root }
        # - { src: './TEST_ARGOX_LABEL_PRINTING_arm64.zip', dest: '/tmp/TEST_ARGOX_LABEL_PRINTING_arm64.zip', owner: ansible, group: ansible }
        # - { src: './TEST_ARGOX_LABEL_PRINTING.desktop', dest: '/etc/skel/Desktop/TEST_ARGOX_LABEL_PRINTING.desktop', owner: root, group: root }

    - name: Unpack Zip File
      ansible.builtin.unarchive:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        remote_src: true
      become: true
      loop:
        - { src: '/tmp/LabelReprintingCore_arm64.zip', dest: '/opt/LabelReprintingCore' }

    # - name: Allow Launching
    #   ansible.builtin.shell:
    #     cmd: |
    #       sudo -u dezel -g dezel dbus-launch gio set {{ item }}.desktop "metadata::trusted" true
    #     chdir: /home/dezel/Desktop
    #   become: true
    #   become_user: dezel
    #   loop:
    #     - LabelReprintingCore
    #     - TEST_ARGOX_LABEL_PRINTING
    #   register: cmd_result
    #   changed_when: cmd_result.rc == 0

    - name: Download RPI ARGOX Drivers
      ansible.builtin.uri:
        url: https://www.argox.com/docfile/drivers/ARGOX_RPi_Printer_Driver-V1.9.1(arm64).tar.gz
        dest: /tmp/ARGOX_RPI_Printer.tar.gz
        creates: /tmp/ARGOX_RPI_Printer.tar.gz

    - name: Unpack RPI ARGOX Drivers
      ansible.builtin.unarchive:
        src: /tmp/ARGOX_RPI_Printer.tar.gz
        dest: /tmp/
        creates: /tmp/ARGOX_RPi_Printer_Driver-V1.9.1(arm64)
        remote_src: true

    - name: Run Install Script
      ansible.builtin.shell:
        cmd: |
          sudo ./install
        chdir: /tmp/ARGOX_RPi_Printer_Driver-V1.9.1(arm64)
        creates: /usr/share/cups/model/argox
      become: true
      register: result
      changed_when: result.rc == 0

    - name: Remove Snaps
      community.general.snap:
        name: '{{ item }}'
        state: absent
      become: true
      loop:
        - thunderbird
        - snap-store
        - firefox

    - name: Install Anydesk
      become: true
      ansible.builtin.apt:
        deb: https://download.anydesk.com/rpi/anydesk_6.4.0-1_arm64.deb

    - name: Install NoMachine
      become: true
      ansible.builtin.apt:
        deb: https://download.nomachine.com/download/8.16/Raspberry/nomachine_8.16.1_1_arm64.deb

    - name: Final Clean Up
      become: true
      ansible.builtin.apt:
        autoremove: true
        autoclean: true
